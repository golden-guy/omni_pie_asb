From 0d971d86b73eeb8d61a500343a4b647fc4a1fc83 Mon Sep 17 00:00:00 2001
From: George Chang <georgekgchang@google.com>
Date: Sat, 5 Oct 2019 10:59:26 +0800
Subject: [PATCH] Prevent uncleared memory leaking in rw_i93.cc

Bug: 139738828
Test: manual
Change-Id: I4e330d4ad1380dbd1e695f81b8183ca8b182b114
Exempt-From-Owner-Approval: new owner approved
(cherry picked from commit d8948d4a1fbb00abecc72227a1910d94633a84e8)
---
 src/nfc/tags/rw_i93.cc | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/src/nfc/tags/rw_i93.cc b/src/nfc/tags/rw_i93.cc
index 428bdae..fbd7379 100644
--- a/src/nfc/tags/rw_i93.cc
+++ b/src/nfc/tags/rw_i93.cc
@@ -2639,12 +2639,20 @@ void rw_i93_sm_format(NFC_HDR* p_resp) {
       }
 
       /* get buffer to store CC, zero length NDEF TLV and Terminator TLV */
-      p_i93->p_update_data = (uint8_t*)GKI_getbuf(RW_I93_FORMAT_DATA_LEN);
+      /* Block size could be either 4 or 8 or 16 or 32 bytes */
+      /* Get buffer for the largest block size I93_MAX_BLOCK_LENGH */
+      p_i93->p_update_data = (uint8_t*)GKI_getbuf(I93_MAX_BLOCK_LENGH);
 
       if (!p_i93->p_update_data) {
         LOG(ERROR) << StringPrintf("Cannot allocate buffer");
         rw_i93_handle_error(NFC_STATUS_FAILED);
         break;
+      } else if (p_i93->block_size > RW_I93_FORMAT_DATA_LEN) {
+        /* Possible leaking information from previous NFC transactions */
+        /* Clear previous values */
+        memset(p_i93->p_update_data, I93_ICODE_TLV_TYPE_NULL,
+               I93_MAX_BLOCK_LENGH);
+        android_errorWriteLog(0x534e4554, "139738828");
       }
 
       p = p_i93->p_update_data;
-- 
2.7.4

